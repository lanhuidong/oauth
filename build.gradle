allprojects {
    apply plugin: "idea"
}

idea {
    project {
        jdkName = JavaVersion.VERSION_1_8
        languageLevel = JavaVersion.VERSION_1_8
    }
}

def springVersion = '4.2.6.RELEASE'
def springSecurityVersion = '4.1.0.RELEASE'
def springSecurityOAuthVersion = '2.0.9.RELEASE'
def freemarkVersion = '2.3.23'
def servletAPIVersion = '3.1.0'
def HikariCPVersion = '2.4.6'
def mysqlConnectorJavaVersion = '5.1.31'
def jacksonVersion = '2.7.4'

subprojects {
    apply plugin: 'java'
    group = 'com.nexusy.oauth'
    version = '1.0.0'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    apply plugin: 'checkstyle'
    checkstyle{
        toolVersion = '6.19'  //该行的作用是指定com.puppycrawl.tools:checkstyle的版本
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    }

    apply plugin: 'war'
    apply plugin: 'org.akhikhl.gretty'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        compile "org.springframework:spring-context-support:$springVersion"
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework.security:spring-security-web:$springSecurityVersion"
        compile "org.springframework.security:spring-security-config:$springSecurityVersion"
        compile ("org.springframework.security.oauth:spring-security-oauth2:$springSecurityOAuthVersion"){
            exclude group : "org.codehaus.jackson", module: "jackson-core-asl"
            exclude group : "org.codehaus.jackson", module: "jackson-mapper-asl"
        }
        compile "org.freemarker:freemarker:$freemarkVersion"
        providedCompile "javax.servlet:javax.servlet-api:$servletAPIVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

project(':oauth-server') {

    gretty {
        servletContainer = 'tomcat8'
        httpPort = 8080
        contextPath = '/server'
    }

    dependencies {
        compile "com.zaxxer:HikariCP:$HikariCPVersion"
        runtime "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
        compile "org.springframework:spring-jdbc:$springVersion"
    }

    task createProject << {
        sourceSets*.allSource.srcDirs*.each { it.mkdirs() }
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
        println 'Project ' + name + ' created'
    }
}

project(':oauth-client') {

    gretty {
        servletContainer = 'tomcat8'
        httpPort = 8081
        contextPath = '/client'
    }

    task createProject << {
        sourceSets*.allSource.srcDirs*.each { it.mkdirs() }
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
        println 'Project ' + name + ' created'
    }
}
